server:
  port: ${random.int(8189,9090)}
  error:
    include-message: always
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

spring:
  application:
    name: swift-wheels-hub-reactive-request-validator
  cloud:
    loadbalancer:
      enabled: true
      ribbon:
        enabled: false
      cache:
        enabled: true
    consul:
      enabled: true
      config:
        enabled: false
        acl-token: ${CONSUL_ACL_TOKEN}
      host: localhost
      port: 8500
      discovery:
        enabled: true
        prefer-ip-address: true
        instanceId: ${spring.application.name}-id
        serviceName: ${spring.application.name}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        hostname: localhost
        failFast: false
  redis:
    host: ${REDIS_HOST}
    password: ${REDIS_PASSWORD}
    port: 6379
    database: 0
  codec:
    max-in-memory-size: 20MB
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

logging:
  level:
    org:
      springframework:
        security: ERROR
        web:
          csrf:
            CsrfFilter: ERROR

apikey:
  secret: ${API_KEY_SECRET}

swagger:
  endpoints:
    - identifier: agency
      url: http://swift-wheels-hub-reactive-agency/agency/definition/v3/api-docs
    - identifier: ai
      url: http://swift-wheels-hub-reactive-ai/ai/definition/v3/api-docs
    - identifier: bookings
      url: http://swift-wheels-hub-reactive-booking/bookings/definition/v3/api-docs
    - identifier: customers
      url: http://swift-wheels-hub-reactive-customer/customers/definition/v3/api-docs
    - identifier: expense
      url: http://swift-wheels-hub-reactive-expense/expense/definition/v3/api-docs

management:
  server:
    port: ${server.port}
  endpoint:
    loggers:
      enabled: true
    health:
      group:
        custom:
          show-components: always
          show-details: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,loggers,prometheus
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
