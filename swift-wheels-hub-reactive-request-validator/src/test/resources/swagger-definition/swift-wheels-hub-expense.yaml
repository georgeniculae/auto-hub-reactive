openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://172.30.64.1:51577/expense'
    description: Generated server url
paths:
  '/invoices/{id}':
    get:
      tags:
        - invoice-controller
      operationId: findInvoiceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceRequest'
    put:
      tags:
        - invoice-controller
      operationId: closeInvoice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InvoiceRequest'
  /revenues:
    get:
      tags:
        - revenue-controller
      operationId: findAllRevenues
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueRequest'
  '/revenues/{date}':
    get:
      tags:
        - revenue-controller
      operationId: findRevenuesByDate
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RevenueRequest'
  /revenues/total:
    get:
      tags:
        - revenue-controller
      operationId: getTotalAmount
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: number
                format: double
  /invoices:
    get:
      tags:
        - invoice-controller
      operationId: findAllInvoices
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceRequest'
  /invoices/count:
    get:
      tags:
        - invoice-controller
      operationId: countInvoices
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  '/invoices/by-customer/{customerUsername}':
    get:
      tags:
        - invoice-controller
      operationId: findAllInvoicesByCustomerId
      parameters:
        - name: customerUsername
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceRequest'
  /invoices/active:
    get:
      tags:
        - invoice-controller
      operationId: findAllActiveInvoices
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceRequest'
  /invoices/active-count:
    get:
      tags:
        - invoice-controller
      operationId: countActiveInvoices
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
components:
  schemas:
    InvoiceDto:
      required:
        - bookingId
        - carId
        - customerEmail
        - customerUsername
      type: object
      properties:
        id:
          type: integer
          format: int64
        customerUsername:
          type: string
        customerEmail:
          type: string
        carId:
          type: integer
          format: int64
        receptionistEmployeeId:
          type: integer
          format: int64
        bookingId:
          type: integer
          format: int64
        carDateOfReturn:
          type: string
          format: date
        isVehicleDamaged:
          type: boolean
        damageCost:
          type: number
          format: double
        additionalPayment:
          type: number
          format: double
        totalAmount:
          type: number
          format: double
        comments:
          type: string
    RevenueDto:
      required:
        - amountFromBooking
        - dateOfRevenue
      type: object
      properties:
        id:
          type: integer
          format: int64
        dateOfRevenue:
          type: string
          format: date
        amountFromBooking:
          type: number
          format: double
