openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://172.30.64.1:51489/agency'
    description: Generated server url
paths:
  '/rental-offices/{id}':
    get:
      tags:
        - rental-office-controller
      operationId: findRentalOfficeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RentalOfficeRequest'
    put:
      tags:
        - rental-office-controller
      operationId: updateRentalOffice
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalOfficeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RentalOfficeRequest'
    delete:
      tags:
        - rental-office-controller
      operationId: deleteRentalOfficeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  '/employees/{id}':
    get:
      tags:
        - employee-controller
      operationId: findEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeRequest'
    put:
      tags:
        - employee-controller
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeRequest'
    delete:
      tags:
        - employee-controller
      operationId: deleteEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  '/cars/{id}':
    get:
      tags:
        - car-controller
      operationId: findCarById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarRequest'
    put:
      tags:
        - car-controller
      operationId: updateCar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarRequest'
    delete:
      tags:
        - car-controller
      operationId: deleteCarById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  '/cars/{id}/update-after-return':
    put:
      tags:
        - car-controller
      operationId: updateCarWhenBookingIsClosed
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarUpdateDetails'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarRequest'
  '/cars/{id}/change-status':
    put:
      tags:
        - car-controller
      operationId: updateCarStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: carState
          in: query
          required: true
          schema:
            type: string
            enum:
              - NOT_AVAILABLE
              - BROKEN
              - IN_REPAIR
              - IN_SERVICE
              - AVAILABLE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarRequest'
  /cars/update-statuses:
    put:
      tags:
        - car-controller
      operationId: updateCarsStatus
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateCarRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarRequest'
  '/branches/{id}':
    get:
      tags:
        - branch-controller
      operationId: findBranchById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchRequest'
    put:
      tags:
        - branch-controller
      operationId: updateBranch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchRequest'
    delete:
      tags:
        - branch-controller
      operationId: deleteBranchById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /rental-offices:
    get:
      tags:
        - rental-office-controller
      operationId: findAllRentalOffices
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RentalOfficeRequest'
    post:
      tags:
        - rental-office-controller
      operationId: addRentalOffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentalOfficeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RentalOfficeRequest'
  /employees:
    get:
      tags:
        - employee-controller
      operationId: findAllEmployees
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeRequest'
    post:
      tags:
        - employee-controller
      operationId: addEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeRequest'
  /cars:
    get:
      tags:
        - car-controller
      operationId: findAllCars
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarRequest'
    post:
      tags:
        - car-controller
      operationId: addCar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarRequest'
  /cars/upload:
    post:
      tags:
        - car-controller
      operationId: uploadCars
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarRequest'
  /cars/add:
    post:
      tags:
        - car-controller
      operationId: addCars
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CarRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarRequest'
  /branches:
    get:
      tags:
        - branch-controller
      operationId: findAllBranches
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BranchRequest'
    post:
      tags:
        - branch-controller
      operationId: addBranch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BranchRequest'
  /rental-offices/count:
    get:
      tags:
        - rental-office-controller
      operationId: countRentalOffices
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /employees/count:
    get:
      tags:
        - employee-controller
      operationId: countEmployees
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  '/employees/branch/{id}':
    get:
      tags:
        - employee-controller
      operationId: findEmployeesByBranchId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeRequest'
  '/cars/{id}/availability':
    get:
      tags:
        - car-controller
      operationId: getAvailableCar
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CarRequest'
  '/cars/make/{make}':
    get:
      tags:
        - car-controller
      operationId: findCarsByMake
      parameters:
        - name: make
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarRequest'
  /cars/count:
    get:
      tags:
        - car-controller
      operationId: countCars
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
  /branches/count:
    get:
      tags:
        - branch-controller
      operationId: countBranches
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
components:
  schemas:
    RentalOfficeDto:
      required:
        - contactAddress
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        contactAddress:
          type: string
        logoType:
          type: string
    EmployeeDto:
      required:
        - firstName
        - jobPosition
        - lastName
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        jobPosition:
          type: string
        workingBranchId:
          type: integer
          format: int64
    CarDto:
      required:
        - make
        - model
      type: object
      properties:
        id:
          type: integer
          format: int64
        make:
          type: string
        model:
          type: string
        bodyType:
          type: string
          enum:
            - HATCHBACK
            - SEDAN
            - SUV
            - COUPE
            - CONVERTIBLE
            - WAGON
            - VAN
        yearOfProduction:
          type: integer
          format: int32
        color:
          type: string
        mileage:
          type: integer
          format: int32
        carStatus:
          type: string
          enum:
            - NOT_AVAILABLE
            - BROKEN
            - IN_REPAIR
            - IN_SERVICE
            - AVAILABLE
        amount:
          type: number
          format: double
        originalBranchId:
          type: integer
          format: int64
        actualBranchId:
          type: integer
          format: int64
        urlOfImage:
          type: string
    CarDetailsForUpdateDto:
      type: object
      properties:
        carId:
          type: integer
          format: int64
        carStatus:
          type: string
          enum:
            - NOT_AVAILABLE
            - BROKEN
            - IN_REPAIR
            - IN_SERVICE
            - AVAILABLE
        receptionistEmployeeId:
          type: integer
          format: int64
    CarForUpdate:
      type: object
      properties:
        carId:
          type: integer
          format: int64
        carStatus:
          type: string
          enum:
            - NOT_AVAILABLE
            - BROKEN
            - IN_REPAIR
            - IN_SERVICE
            - AVAILABLE
    BranchDto:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        rentalOfficeId:
          type: integer
          format: int64
