server:
  port: ${random.int(8189,9090)}
  error:
    include-message: always
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

spring:
  application:
    name: auto-hub-reactive-email-notification
  codec:
    max-in-memory-size: 20MB
  cloud:
    loadbalancer:
      enabled: true
      cache:
        enabled: true
    consul:
      enabled: true
      host: localhost
      port: 8500
      discovery:
        enabled: true
        prefer-ip-address: true
        instanceId: ${spring.application.name}-id
        serviceName: ${spring.application.name}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        hostname: localhost
        failFast: false
    function:
      definition: customerInfoConsumer;emailNotificationConsumer
    stream:
      defaultBinder: kafka
      bindings:
        customerInfoConsumer-in-0:
          binder: kafka
          destination: ${CUSTOMER_INFO_REACTIVE_TOPIC}
          contentType: application/json
          group: ${EMAIL_NOTIFICATION_CONSUMER_GROUP}
        emailNotificationConsumer-in-0:
          binder: kafka
          destination: ${EMAIL_NOTIFICATION_REACTIVE_TOPIC}
          contentType: application/json
          group: ${EMAIL_NOTIFICATION_CONSUMER_GROUP}
      kafka:
        binder:
          auto-create-topics: true
          auto-add-partitions: false
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            allow.auto.create.topics: true
            auto.offset.reset: latest
        bindings:
          customerInfoConsumer-in-0:
            consumer:
              ack-mode: MANUAL_IMMEDIATE
          emailNotificationConsumer-in-0:
            consumer:
              ack-mode: MANUAL_IMMEDIATE
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      enable-auto-commit: false
  sendgrid:
    api-key: ${SENDGRID_API_KEY}
  web:
    resources:
      add-mappings: false

sendgrid:
  mail:
    from: ${SENDGRID_MAIL_FROM}
    name: auto Hub

management:
  server:
    port: ${server.port}
  endpoint:
    health:
      group:
        custom:
          show-components: always
          show-details: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,loggers,prometheus
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    org:
      springframework:
        security: ERROR
        web: ERROR
