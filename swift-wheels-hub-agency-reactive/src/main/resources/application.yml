server:
  port: ${PORT:8182}
  error:
    include-message: always
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

spring:
  application:
    name: car-rental-agency
  webflux:
    base-path: /agency
  data:
    mongodb:
      database: car_rental_agency
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      uri: mongodb+srv://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@carrentalservice.soyxkll.mongodb.net/
  cloud:
    discovery:
      enabled: true
    function:
      definition: savedUserConsumer;updatedUserConsumer
    stream:
      bindings:
        savedUserConsumer-in-0:
          binder: kafka
          destination: ${SAVED_USER_TOPIC_REACTIVE}
          contentType: application/json
          group: ${AGENCY_CONSUMER_GROUP}
        updatedUserConsumer-in-0:
          binder: kafka
          destination: ${UPDATED_USER_TOPIC_REACTIVE}
          contentType: application/json
          group: ${AGENCY_CONSUMER_GROUP}
      kafka:
        binder:
          auto-create-topics: false
          auto-add-partitions: false
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            allow.auto.create.topics: false
  kafka:
    bootstrap-servers: localhost:9092
  mvc:
    throw-exception-if-no-handler-found: true
    web:
      resources:
        add-mappings: false

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_USER}:${EUREKA_PASSWORD}@localhost:8861/eureka
    registryFetchIntervalSeconds: 5
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 10

springdoc:
  swagger-ui:
    enabled: true
    path: /definition/swagger-ui.html
    operationsSorter: method
  api-docs:
    path: /definition/v3/api-docs

ribbon:
  eureka:
    enabled: false

logging:
  level:
    org:
      springframework:
        security: DEBUG
        web:
          csrf:
            CsrfFilter: DEBUG

authentication:
  type: apikey
  secret: ${API_KEY_SECRET}

cross-origin: '*'

migration:
  packageScan: com.carrental.agency.migration
