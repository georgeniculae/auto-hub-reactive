server:
  port: ${PORT:8185}
  error:
    include-message: always
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

spring:
  application:
    name: car-rental-expense
  webflux:
    base-path: /expense
  data:
    mongodb:
      database: car_rental_expense
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      uri: mongodb+srv://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@cluster0.2wuy2po.mongodb.net/
  cloud:
    discovery:
      enabled: true
    function:
      definition: savedBookingConsumer;updatedBookingConsumer;deletedBookingConsumer
    stream:
      bindings:
        emailNotificationProducer-out-0:
          destination: ${EMAIL_NOTIFICATION_REACTIVE_TOPIC}
          contentType: application/json
        auditLogInfoProducer-out-0:
          destination: ${EXPENSE_AUDIT_LOG_INFO_REACTIVE_TOPIC}
          contentType: application/json
        savedBookingConsumer-in-0:
          binder: kafka
          destination: ${SAVED_BOOKING_REACTIVE_TOPIC}
          contentType: application/json
          group: ${EXPENSE_CONSUMER_GROUP}
        updatedBookingConsumer-in-0:
          binder: kafka
          destination: ${UPDATED_BOOKING_REACTIVE_TOPIC}
          contentType: application/json
          group: ${EXPENSE_CONSUMER_GROUP}
        deletedBookingConsumer-in-0:
          binder: kafka
          destination: ${DELETED_BOOKING_REACTIVE_TOPIC}
          contentType: application/json
          group: ${EXPENSE_CONSUMER_GROUP}
      kafka:
        binder:
          auto-create-topics: false
          auto-add-partitions: false
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            allow.auto.create.topics: false
  kafka:
    bootstrap-servers: localhost:9092
  sendgrid:
    api-key: ${SENDGRID_API_KEY}
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_USER}:${EUREKA_PASSWORD}@localhost:8861/eureka
    registryFetchIntervalSeconds: 5
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 10

springdoc:
  swagger-ui:
    enabled: true
    path: /definition/swagger-ui.html
    operationsSorter: method
  api-docs:
    path: /definition/v3/api-docs

ribbon:
  eureka:
    enabled: false

logging:
  level:
    org:
      springframework:
        security: DEBUG
        web:
          csrf:
            CsrfFilter: DEBUG

authentication:
  type: apikey
  secret: ${API_KEY_SECRET}

cross-origin: '*'

webClient:
  url:
    car-rental-customer-customers: lb://car-rental-customer/customers
    car-rental-booking-bookings: lb://car-rental-booking/bookings
    car-rental-agency-branches: lb://car-rental-agency/agency/branches
    car-rental-agency-cars: lb://car-rental-agency/agency/cars
    car-rental-agency-employees: lb://car-rental-agency/agency/employees

bookingConsumer:
  isMessageAckEnabled: false

scheduled:
  fixedDelay: 5000

audit:
  enabled: true
