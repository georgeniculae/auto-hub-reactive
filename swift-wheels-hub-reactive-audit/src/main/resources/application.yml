server:
  port: ${random.int(8189,9090)}
  error:
    include-message: always
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

spring:
  application:
    name: swift-wheels-hub-reactive-audit
  data:
    mongodb:
      database: swift_wheels_hub_audit
      username: ${MONGODB_USERNAME}
      password: ${MONGODB_PASSWORD}
      uri: mongodb+srv://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@swiftwheelshubaudit.hnpvjeh.mongodb.net
  cloud:
    loadbalancer:
      enabled: true
      ribbon:
        enabled: false
      cache:
        enabled: true
    consul:
      enabled: true
      config:
        enabled: false
        acl-token: ${CONSUL_ACL_TOKEN}
      host: localhost
      port: 8500
      discovery:
        enabled: true
        prefer-ip-address: true
        instanceId: ${spring.application.name}-id
        serviceName: ${spring.application.name}
        healthCheckPath: /actuator/health
        healthCheckInterval: 5s
        hostname: localhost
        failFast: false
    function:
      definition: bookingAuditLogInfoConsumer;customerAuditLogInfoConsumer;expenseAuditLogInfoConsumer
    stream:
      defaultBinder: kafka
      bindings:
        bookingAuditLogInfoConsumer-in-0:
          binder: kafka
          destination: ${BOOKING_AUDIT_LOG_INFO_REACTIVE_TOPIC}
          contentType: application/json
          group: ${AUDIT_CONSUMER_GROUP}
        customerAuditLogInfoConsumer-in-0:
          binder: kafka
          destination: ${CUSTOMER_AUDIT_LOG_INFO_REACTIVE_TOPIC}
          contentType: application/json
          group: ${AUDIT_CONSUMER_GROUP}
        expenseAuditLogInfoConsumer-in-0:
          binder: kafka
          destination: ${EXPENSE_AUDIT_LOG_INFO_REACTIVE_TOPIC}
          contentType: application/json
          group: ${AUDIT_CONSUMER_GROUP}
      kafka:
        binder:
          auto-create-topics: true
          auto-add-partitions: false
          consumer-properties:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            allow.auto.create.topics: true
  kafka:
    bootstrap-servers: localhost:9092
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

management:
  server:
    port: ${server.port}
  endpoint:
    loggers:
      enabled: true
    health:
      group:
        custom:
          show-components: always
          show-details: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,loggers,prometheus
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

logging:
  level:
    org:
      springframework:
        security: ERROR
        web:
          csrf:
            CsrfFilter: ERROR
        data:
          mongodb:
            core:
              ReactiveMongoTemplate: ERROR

auditConsumer:
  isMessageAckEnabled: false

mongo-operations:
  enabled: true
