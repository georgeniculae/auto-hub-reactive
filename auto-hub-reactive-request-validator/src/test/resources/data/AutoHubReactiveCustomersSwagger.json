"openapi: 3.0.1\ninfo:\n  title: OpenAPI definition\n  version: v0\nservers:\n  - url: 'http://172.30.64.1:51558/customers'\n    description: Generated server url\npaths:\n  '/{id}':\n    put:\n      tags:\n        - user-controller\n      operationId: updateUser\n      parameters:\n        - name: id\n          in: path\n          required: true\n          schema:\n            type: integer\n            format: int64\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserDto'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDto'\n  /register:\n    post:\n      tags:\n        - user-controller\n      operationId: registerUser\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegisterRequest'\n        required: true\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/AuthenticationResponse'\n  '/{username}':\n    get:\n      tags:\n        - user-controller\n      operationId: findUserByUsername\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserDto'\n    delete:\n      tags:\n        - user-controller\n      operationId: deleteUserById\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n  '/keycloak-user/{username}':\n    get:\n      tags:\n        - user-controller\n      operationId: getUser\n      parameters:\n        - name: username\n          in: path\n          required: true\n          schema:\n            type: string\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserRepresentation'\n  /current:\n    get:\n      tags:\n        - user-controller\n      operationId: getCurrentUser\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                $ref: '#/components/schemas/UserInfo'\n  /count:\n    get:\n      tags:\n        - user-controller\n      operationId: countUsers\n      responses:\n        '200':\n          description: OK\n          content:\n            '*/*':\n              schema:\n                type: integer\n                format: int64\ncomponents:\n  schemas:\n    UserDto:\n      required:\n        - address\n        - dateOfBirth\n        - email\n        - firstName\n        - lastName\n        - password\n        - username\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        role:\n          type: string\n          enum:\n            - ROLE_ADMIN\n            - ROLE_USER\n            - ROLE_SUPPORT\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        dateOfBirth:\n          type: string\n          format: date\n        address:\n          type: string\n    RegisterRequest:\n      type: object\n      properties:\n        username:\n          type: string\n        password:\n          type: string\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        address:\n          type: string\n        role:\n          type: string\n          enum:\n            - ROLE_ADMIN\n            - ROLE_USER\n            - ROLE_SUPPORT\n        dateOfBirth:\n          type: string\n          format: date\n    AuthenticationResponse:\n      type: object\n      properties:\n        token:\n          type: string\n    CredentialRepresentation:\n      type: object\n      properties:\n        id:\n          type: string\n        type:\n          type: string\n        userLabel:\n          type: string\n        createdDate:\n          type: integer\n          format: int64\n        secretData:\n          type: string\n        credentialData:\n          type: string\n        priority:\n          type: integer\n          format: int32\n        value:\n          type: string\n        temporary:\n          type: boolean\n        device:\n          type: string\n          deprecated: true\n        hashedSaltedValue:\n          type: string\n          deprecated: true\n        salt:\n          type: string\n          deprecated: true\n        hashIterations:\n          type: integer\n          format: int32\n          deprecated: true\n        counter:\n          type: integer\n          format: int32\n          deprecated: true\n        algorithm:\n          type: string\n          deprecated: true\n        digits:\n          type: integer\n          format: int32\n          deprecated: true\n        period:\n          type: integer\n          format: int32\n          deprecated: true\n        config:\n          type: object\n          properties:\n            empty:\n              type: boolean\n          additionalProperties:\n            type: array\n            deprecated: true\n            items:\n              type: string\n              deprecated: true\n          deprecated: true\n    FederatedIdentityRepresentation:\n      type: object\n      properties:\n        identityProvider:\n          type: string\n        userId:\n          type: string\n        userName:\n          type: string\n    SocialLinkRepresentation:\n      type: object\n      properties:\n        socialProvider:\n          type: string\n        socialUserId:\n          type: string\n        socialUsername:\n          type: string\n    UserConsentRepresentation:\n      type: object\n      properties:\n        clientId:\n          type: string\n        grantedClientScopes:\n          type: array\n          items:\n            type: string\n        createdDate:\n          type: integer\n          format: int64\n        lastUpdatedDate:\n          type: integer\n          format: int64\n        grantedRealmRoles:\n          type: array\n          deprecated: true\n          items:\n            type: string\n            deprecated: true\n    UserProfileAttributeGroupMetadata:\n      type: object\n      properties:\n        name:\n          type: string\n        displayHeader:\n          type: string\n        displayDescription:\n          type: string\n        annotations:\n          type: object\n          additionalProperties:\n            type: object\n    UserProfileAttributeMetadata:\n      type: object\n      properties:\n        name:\n          type: string\n        displayName:\n          type: string\n        required:\n          type: boolean\n        readOnly:\n          type: boolean\n        annotations:\n          type: object\n          additionalProperties:\n            type: object\n        validators:\n          type: object\n          additionalProperties:\n            type: object\n            additionalProperties:\n              type: object\n        group:\n          type: string\n    UserProfileMetadata:\n      type: object\n      properties:\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserProfileAttributeMetadata'\n        groups:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserProfileAttributeGroupMetadata'\n    UserRepresentation:\n      type: object\n      properties:\n        self:\n          type: string\n        id:\n          type: string\n        origin:\n          type: string\n        createdTimestamp:\n          type: integer\n          format: int64\n        username:\n          type: string\n        enabled:\n          type: boolean\n        totp:\n          type: boolean\n          deprecated: true\n        emailVerified:\n          type: boolean\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        federationLink:\n          type: string\n        serviceAccountClientId:\n          type: string\n        attributes:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        credentials:\n          type: array\n          items:\n            $ref: '#/components/schemas/CredentialRepresentation'\n        disableableCredentialTypes:\n          uniqueItems: true\n          type: array\n          items:\n            type: string\n        requiredActions:\n          type: array\n          items:\n            type: string\n        federatedIdentities:\n          type: array\n          items:\n            $ref: '#/components/schemas/FederatedIdentityRepresentation'\n        realmRoles:\n          type: array\n          items:\n            type: string\n        clientRoles:\n          type: object\n          additionalProperties:\n            type: array\n            items:\n              type: string\n        clientConsents:\n          type: array\n          items:\n            $ref: '#/components/schemas/UserConsentRepresentation'\n        notBefore:\n          type: integer\n          format: int32\n        applicationRoles:\n          type: object\n          additionalProperties:\n            type: array\n            deprecated: true\n            items:\n              type: string\n              deprecated: true\n          deprecated: true\n        socialLinks:\n          type: array\n          deprecated: true\n          items:\n            $ref: '#/components/schemas/SocialLinkRepresentation'\n        groups:\n          type: array\n          items:\n            type: string\n        access:\n          type: object\n          additionalProperties:\n            type: boolean\n        userProfileMetadata:\n          $ref: '#/components/schemas/UserProfileMetadata'\n    CurrentUserDto:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        password:\n          type: string\n        role:\n          type: string\n          enum:\n            - ROLE_ADMIN\n            - ROLE_USER\n            - ROLE_SUPPORT\n        firstName:\n          type: string\n        lastName:\n          type: string\n        email:\n          type: string\n        credentialsNonExpired:\n          type: boolean\n        accountNonExpired:\n          type: boolean\n        accountNonLocked:\n          type: boolean\n        authorities:\n          type: array\n          items:\n            $ref: '#/components/schemas/GrantedAuthority'\n    GrantedAuthority:\n      type: object\n      properties:\n        authority:\n          type: string"